# TechMage NX - –ï–¥–∏–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

.PHONY: help dev-up dev-down dev-restart dev-logs dev-build dev-clean status check prod-up prod-down prod-restart prod-logs prod-build prod-clean

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(GREEN)TechMage NX - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è$(NC)"
	@echo ""
	@echo "$(YELLOW)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-20s$(NC) %s\n", $$1, $$2}'
	@echo ""
	@echo "$(YELLOW)üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:$(NC)"
	@echo "  $(GREEN)DATABASE_MIGRATIONS.md$(NC) - –†–∞–±–æ—Ç–∞ —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏"
	@echo "  $(GREEN)DOCKER_OPTIMIZATION.md$(NC) - –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è Docker —Å–±–æ—Ä–∫–∏"

check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –∫ –∑–∞–ø—É—Å–∫—É
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@./check-setup.sh

docs-migrations: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ –º–∏–≥—Ä–∞—Ü–∏—è–º
	@echo "$(GREEN)üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –º–∏–≥—Ä–∞—Ü–∏—è–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:$(NC)"
	@cat DATABASE_MIGRATIONS.md

docs-docker: ## –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Docker
	@echo "$(GREEN)üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Docker:$(NC)"
	@cat DOCKER_OPTIMIZATION.md

dev-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ development —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ TechMage NX –≤ development —Ä–µ–∂–∏–º–µ...$(NC)"
	@docker-compose --profile development up -d
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ development!$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  üåê Frontend:    http://localhost:3000"
	@echo "  üîß Admin:       http://localhost:3001"
	@echo "  üîå Backend API: http://localhost:4000"
	@echo "  üóÑÔ∏è  PostgreSQL:  localhost:5432"
	@echo "  üì¶ Redis:       localhost:6379"
	@echo "  üìÅ MinIO:       http://localhost:9000 (Console: http://localhost:9001)"

dev-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ development —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö development —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile development down
	@echo "$(GREEN)‚úÖ –í—Å–µ development —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

dev-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ development —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ development —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile development restart
	@echo "$(GREEN)‚úÖ Development —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã$(NC)"

dev-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö development —Å–µ—Ä–≤–∏—Å–æ–≤
	@docker-compose --profile development logs -f

dev-build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ development –æ–±—Ä–∞–∑—ã
	@echo "$(YELLOW)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ development –æ–±—Ä–∞–∑–æ–≤ —Å BuildKit –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º...$(NC)"
	@export $(cat docker.env | xargs) && docker-compose --profile development build
	@echo "$(GREEN)‚úÖ Development –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

dev-build-fast: ## –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ development –æ–±—Ä–∞–∑–æ–≤ (—Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Å–ª–æ–∏)
	@echo "$(YELLOW)‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ development –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@export $(cat docker.env | xargs) && docker-compose --profile development build --parallel
	@echo "$(GREEN)‚úÖ Development –æ–±—Ä–∞–∑—ã –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

dev-clean: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ development (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ + —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, —Å–µ—Ç–µ–π, —Ç–æ–º–æ–≤)
	@echo "$(RED)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ development Docker...$(NC)"
	@docker-compose --profile development down -v --remove-orphans
	@docker system prune -f
	@echo "$(GREEN)‚úÖ Development –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose ps

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
backend-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ backend
	@docker-compose logs -f backend

frontend-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ frontend
	@docker-compose logs -f frontend

admin-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ admin
	@docker-compose logs -f admin

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)üóÑÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@docker-compose exec backend bunx prisma migrate deploy --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã$(NC)"

db-migrate-dev: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ development –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "$(YELLOW)üóÑÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤ development...$(NC)"
	@docker-compose --profile development exec backend bunx prisma migrate deploy --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ Development –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã$(NC)"

db-migrate-prod: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
	@echo "$(YELLOW)üóÑÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –≤ production...$(NC)"
	@docker-compose --profile production exec backend-prod bunx prisma migrate deploy --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ Production –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã$(NC)"

db-migrate-create: ## –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏–≥—Ä–∞—Ü–∏—é (–≤–≤–µ–¥–∏—Ç–µ MIGRATION_NAME=–Ω–∞–∑–≤–∞–Ω–∏–µ)
	@echo "$(YELLOW)üìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏: $(MIGRATION_NAME)...$(NC)"
	@docker-compose exec backend bunx prisma migrate dev --name $(MIGRATION_NAME) --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è $(MIGRATION_NAME) —Å–æ–∑–¥–∞–Ω–∞$(NC)"

db-migrate-reset: ## –°–±—Ä–æ—Å–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤—Å–µ –º–∏–≥—Ä–∞—Ü–∏–∏
	@echo "$(RED)‚ö†Ô∏è –°–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@docker-compose exec backend bunx prisma migrate reset --force --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω–∞ –∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã$(NC)"

db-migrate-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π:$(NC)"
	@docker-compose exec backend bunx prisma migrate status --schema=./src/database/prisma/schema.prisma

db-studio: ## –û—Ç–∫—Ä—ã—Ç—å Prisma Studio
	@echo "$(GREEN)üîç –ó–∞–ø—É—Å–∫ Prisma Studio...$(NC)"
	@docker-compose exec backend bunx prisma studio --schema=./src/database/prisma/schema.prisma

db-studio-prod: ## –û—Ç–∫—Ä—ã—Ç—å Prisma Studio –¥–ª—è production
	@echo "$(GREEN)üîç –ó–∞–ø—É—Å–∫ Prisma Studio –¥–ª—è production...$(NC)"
	@docker-compose --profile production exec backend-prod bunx prisma studio --schema=./src/database/prisma/schema.prisma

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-generate: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Prisma –∫–ª–∏–µ–Ω—Ç
	@echo "$(YELLOW)üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma –∫–ª–∏–µ–Ω—Ç–∞...$(NC)"
	@docker-compose exec backend bunx prisma generate --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ Prisma –∫–ª–∏–µ–Ω—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω$(NC)"

db-push: ## –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–±–µ–∑ –º–∏–≥—Ä–∞—Ü–∏–π)
	@echo "$(YELLOW)üì§ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ö–µ–º—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@docker-compose exec backend bunx prisma db push --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ö–µ–º—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã$(NC)"

db-pull: ## –ò–∑–≤–ª–µ—á—å —Å—Ö–µ–º—É –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)üì• –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Ö–µ–º—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@docker-compose exec backend bunx prisma db pull --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ –°—Ö–µ–º–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∞$(NC)"

db-seed: ## –ó–∞–ø–æ–ª–Ω–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
	@echo "$(YELLOW)üå± –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...$(NC)"
	@docker-compose exec backend bun run seed
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏$(NC)"

db-backup: ## –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...$(NC)"
	@docker-compose exec postgres pg_dump -U ${POSTGRES_USER:-ciel} -d ${POSTGRES_DB:-techmage} > backup_$(shell date +%Y%m%d_%H%M%S).sql
	@echo "$(GREEN)‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞$(NC)"

db-restore: ## –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ (–≤–≤–µ–¥–∏—Ç–µ BACKUP_FILE=—Ñ–∞–π–ª.sql)
	@echo "$(YELLOW)üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ $(BACKUP_FILE)...$(NC)"
	@docker-compose exec -T postgres psql -U ${POSTGRES_USER:-ciel} -d ${POSTGRES_DB:-techmage} < $(BACKUP_FILE)
	@echo "$(GREEN)‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞$(NC)"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É backend –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@docker-compose exec backend sh

dev-shell-prod: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ production –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É backend
	@docker-compose --profile production exec backend-prod sh

dev-shell-db: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É PostgreSQL
	@docker-compose exec postgres psql -U ${POSTGRES_USER:-ciel} -d ${POSTGRES_DB:-techmage}

# ===========================================
# PRODUCTION –ö–û–ú–ê–ù–î–´
# ===========================================

prod-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ production —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ TechMage NX –≤ production —Ä–µ–∂–∏–º–µ...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º...$(NC)"
	@docker system prune -f
	@docker-compose --profile production up -d
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ production!$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  üåê Frontend:    http://localhost:3000"
	@echo "  üîß Admin:       http://localhost:3001"
	@echo "  üîå Backend API: http://localhost:4000"
	@echo "  üóÑÔ∏è  PostgreSQL:  localhost:5432"
	@echo "  üì¶ Redis:       localhost:6379"
	@echo "  üìÅ MinIO:       http://localhost:9000 (Console: http://localhost:9001)"

prod-up-low-memory: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å production —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –º–∞–ª–æ–º–æ—â–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (2GB RAM)
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ TechMage NX –≤ production —Ä–µ–∂–∏–º–µ (–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è 2GB RAM)...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º...$(NC)"
	@docker system prune -f
	@echo "$(YELLOW)üî® –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫...$(NC)"
	@docker-compose build backend-prod --no-cache
	@docker-compose up -d postgres redis minio backend-prod
	@echo "$(YELLOW)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend...$(NC)"
	@sleep 30
	@docker-compose build frontend-prod --no-cache
	@docker-compose up -d frontend-prod
	@docker-compose build admin-prod --no-cache
	@docker-compose up -d admin-prod
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ production!$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  üåê Frontend:    http://localhost:3000"
	@echo "  üîß Admin:       http://localhost:3001"
	@echo "  üîå Backend API: http://localhost:4000"
	@echo "  üóÑÔ∏è  PostgreSQL:  localhost:5432"
	@echo "  üì¶ Redis:       localhost:6379"
	@echo "  üìÅ MinIO:       http://localhost:9000 (Console: http://localhost:9001)"

prod-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ production —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö production —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile production down
	@echo "$(GREEN)‚úÖ –í—Å–µ production —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

prod-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ production —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ production —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile production restart
	@echo "$(GREEN)‚úÖ Production —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã$(NC)"

prod-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö production —Å–µ—Ä–≤–∏—Å–æ–≤
	@docker-compose --profile production logs -f

prod-build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ production –æ–±—Ä–∞–∑—ã
	@echo "$(YELLOW)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤ —Å BuildKit –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞...$(NC)"
	@docker system prune -f
	@docker builder prune -f
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@export $(cat docker.env | xargs) && docker-compose --profile production build
	@echo "$(GREEN)‚úÖ Production –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

prod-build-fast: ## –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤ (—Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Å–ª–æ–∏)
	@echo "$(YELLOW)‚ö° –ë—ã—Å—Ç—Ä–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@export $(cat docker.env | xargs) && docker-compose --profile production build --parallel
	@echo "$(GREEN)‚úÖ Production –æ–±—Ä–∞–∑—ã –±—ã—Å—Ç—Ä–æ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

prod-build-sequential: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å production –æ–±—Ä–∞–∑—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ (–¥–ª—è –º–∞–ª–æ–º–æ—â–Ω—ã—Ö —Å–∏—Å—Ç–µ–º)
	@echo "$(YELLOW)üî® –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤ —Å BuildKit...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞...$(NC)"
	@docker system prune -f
	@docker builder prune -f
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ backend...$(NC)"
	@export $(cat docker.env | xargs) && docker-compose build backend-prod
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ frontend...$(NC)"
	@export $(cat docker.env | xargs) && docker-compose build frontend-prod
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ admin...$(NC)"
	@export $(cat docker.env | xargs) && docker-compose build admin-prod
	@echo "$(GREEN)‚úÖ –í—Å–µ production –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ$(NC)"

prod-clean: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ production (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ + —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, —Å–µ—Ç–µ–π, —Ç–æ–º–æ–≤)
	@echo "$(RED)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ production Docker...$(NC)"
	@docker-compose --profile production down -v --remove-orphans
	@docker system prune -f
	@echo "$(GREEN)‚úÖ Production –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

prod-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö production —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å production —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose --profile production ps

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—ç—à–µ–º
cache-clean: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ Docker –∫—ç—à–∏
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö Docker –∫—ç—à–µ–π...$(NC)"
	@docker builder prune -f
	@docker system prune -f
	@echo "$(GREEN)‚úÖ –ö—ç—à–∏ –æ—á–∏—â–µ–Ω—ã$(NC)"

cache-inspect: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Docker –∫—ç—à–∞—Ö
	@echo "$(GREEN)üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Docker –∫—ç—à–∞—Ö:$(NC)"
	@docker system df
	@echo ""
	@echo "$(YELLOW)BuildKit –∫—ç—à–∏:$(NC)"
	@docker buildx du

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@echo ""
	@echo "$(YELLOW)Backend API:$(NC)"
	@curl -s http://localhost:4000/health || echo "$(RED)‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "$(YELLOW)Frontend:$(NC)"
	@curl -s http://localhost:3000 > /dev/null && echo "$(GREEN)‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω$(NC)" || echo "$(RED)‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "$(YELLOW)Admin:$(NC)"
	@curl -s http://localhost:3001 > /dev/null && echo "$(GREEN)‚úÖ Admin –¥–æ—Å—Ç—É–ø–µ–Ω$(NC)" || echo "$(RED)‚ùå Admin –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"

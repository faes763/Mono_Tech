# TechMage NX - –ï–¥–∏–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞

.PHONY: help dev-up dev-down dev-restart dev-logs dev-build dev-clean status check prod-up prod-down prod-restart prod-logs prod-build prod-clean

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN=\033[0;32m
YELLOW=\033[1;33m
RED=\033[0;31m
NC=\033[0m # No Color

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
	@echo "$(GREEN)TechMage NX - –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è$(NC)"
	@echo ""
	@echo "$(YELLOW)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "  $(GREEN)%-15s$(NC) %s\n", $$1, $$2}'

check: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –∫ –∑–∞–ø—É—Å–∫—É
	@echo "$(GREEN)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã...$(NC)"
	@./check-setup.sh

dev-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ development —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ TechMage NX –≤ development —Ä–µ–∂–∏–º–µ...$(NC)"
	@docker-compose --profile development up -d
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ development!$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  üåê Frontend:    http://localhost:3000"
	@echo "  üîß Admin:       http://localhost:3001"
	@echo "  üîå Backend API: http://localhost:4000"
	@echo "  üóÑÔ∏è  PostgreSQL:  localhost:5432"
	@echo "  üì¶ Redis:       localhost:6379"
	@echo "  üìÅ MinIO:       http://localhost:9000 (Console: http://localhost:9001)"

dev-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ development —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö development —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile development down
	@echo "$(GREEN)‚úÖ –í—Å–µ development —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

dev-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ development —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ development —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile development restart
	@echo "$(GREEN)‚úÖ Development —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã$(NC)"

dev-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö development —Å–µ—Ä–≤–∏—Å–æ–≤
	@docker-compose --profile development logs -f

dev-build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ development –æ–±—Ä–∞–∑—ã
	@echo "$(YELLOW)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ development –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@docker-compose --profile development build --no-cache
	@echo "$(GREEN)‚úÖ Development –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

dev-clean: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ development (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ + —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, —Å–µ—Ç–µ–π, —Ç–æ–º–æ–≤)
	@echo "$(RED)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ development Docker...$(NC)"
	@docker-compose --profile development down -v --remove-orphans
	@docker system prune -f
	@echo "$(GREEN)‚úÖ Development –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose ps

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
backend-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ backend
	@docker-compose logs -f backend

frontend-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ frontend
	@docker-compose logs -f frontend

admin-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ç–æ–ª—å–∫–æ admin
	@docker-compose logs -f admin

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-migrate: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	@echo "$(YELLOW)üóÑÔ∏è –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...$(NC)"
	@docker-compose exec backend bunx prisma migrate deploy --schema=./src/database/prisma/schema.prisma
	@echo "$(GREEN)‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã$(NC)"

db-studio: ## –û—Ç–∫—Ä—ã—Ç—å Prisma Studio
	@echo "$(GREEN)üîç –ó–∞–ø—É—Å–∫ Prisma Studio...$(NC)"
	@docker-compose exec backend bunx prisma studio --schema=./src/database/prisma/schema.prisma

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
dev-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É backend –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	@docker-compose exec backend sh

# ===========================================
# PRODUCTION –ö–û–ú–ê–ù–î–´
# ===========================================

prod-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –≤ production —Ä–µ–∂–∏–º–µ
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ TechMage NX –≤ production —Ä–µ–∂–∏–º–µ...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º...$(NC)"
	@docker system prune -f
	@docker-compose --profile production up -d
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ production!$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  üåê Frontend:    http://localhost:3000"
	@echo "  üîß Admin:       http://localhost:3001"
	@echo "  üîå Backend API: http://localhost:4000"
	@echo "  üóÑÔ∏è  PostgreSQL:  localhost:5432"
	@echo "  üì¶ Redis:       localhost:6379"
	@echo "  üìÅ MinIO:       http://localhost:9000 (Console: http://localhost:9001)"

prod-up-low-memory: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å production —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –º–∞–ª–æ–º–æ—â–Ω—ã—Ö —Å–∏—Å—Ç–µ–º (2GB RAM)
	@echo "$(GREEN)üöÄ –ó–∞–ø—É—Å–∫ TechMage NX –≤ production —Ä–µ–∂–∏–º–µ (–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è 2GB RAM)...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º...$(NC)"
	@docker system prune -f
	@echo "$(YELLOW)üî® –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫...$(NC)"
	@docker-compose build backend-prod --no-cache
	@docker-compose up -d postgres redis minio backend-prod
	@echo "$(YELLOW)‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend...$(NC)"
	@sleep 30
	@docker-compose build frontend-prod --no-cache
	@docker-compose up -d frontend-prod
	@docker-compose build admin-prod --no-cache
	@docker-compose up -d admin-prod
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ production!$(NC)"
	@echo ""
	@echo "$(YELLOW)–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  üåê Frontend:    http://localhost:3000"
	@echo "  üîß Admin:       http://localhost:3001"
	@echo "  üîå Backend API: http://localhost:4000"
	@echo "  üóÑÔ∏è  PostgreSQL:  localhost:5432"
	@echo "  üì¶ Redis:       localhost:6379"
	@echo "  üìÅ MinIO:       http://localhost:9000 (Console: http://localhost:9001)"

prod-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ production —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö production —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile production down
	@echo "$(GREEN)‚úÖ –í—Å–µ production —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

prod-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ production —Å–µ—Ä–≤–∏—Å—ã
	@echo "$(YELLOW)üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ production —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@docker-compose --profile production restart
	@echo "$(GREEN)‚úÖ Production —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã$(NC)"

prod-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö production —Å–µ—Ä–≤–∏—Å–æ–≤
	@docker-compose --profile production logs -f

prod-build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –≤—Å–µ production –æ–±—Ä–∞–∑—ã
	@echo "$(YELLOW)üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞...$(NC)"
	@docker system prune -f
	@docker builder prune -f
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@docker-compose --profile production build --no-cache
	@echo "$(GREEN)‚úÖ Production –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã$(NC)"

prod-build-sequential: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å production –æ–±—Ä–∞–∑—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ (–¥–ª—è –º–∞–ª–æ–º–æ—â–Ω—ã—Ö —Å–∏—Å—Ç–µ–º)
	@echo "$(YELLOW)üî® –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —Å–±–æ—Ä–∫–∞ production –æ–±—Ä–∞–∑–æ–≤...$(NC)"
	@echo "$(YELLOW)üßπ –û—á–∏—Å—Ç–∫–∞ Docker –∫—ç—à–∞...$(NC)"
	@docker system prune -f
	@docker builder prune -f
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ backend...$(NC)"
	@docker-compose build backend-prod --no-cache
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ frontend...$(NC)"
	@docker-compose build frontend-prod --no-cache
	@echo "$(YELLOW)üî® –°–±–æ—Ä–∫–∞ admin...$(NC)"
	@docker-compose build admin-prod --no-cache
	@echo "$(GREEN)‚úÖ –í—Å–µ production –æ–±—Ä–∞–∑—ã –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω—ã –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ$(NC)"

prod-clean: ## –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ production (–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ + —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, —Å–µ—Ç–µ–π, —Ç–æ–º–æ–≤)
	@echo "$(RED)üßπ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ production Docker...$(NC)"
	@docker-compose --profile production down -v --remove-orphans
	@docker system prune -f
	@echo "$(GREEN)‚úÖ Production –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

prod-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö production —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üìä –°—Ç–∞—Ç—É—Å production —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@docker-compose --profile production ps

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤
health: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "$(GREEN)üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@echo ""
	@echo "$(YELLOW)Backend API:$(NC)"
	@curl -s http://localhost:4000/health || echo "$(RED)‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "$(YELLOW)Frontend:$(NC)"
	@curl -s http://localhost:3000 > /dev/null && echo "$(GREEN)‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω$(NC)" || echo "$(RED)‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
	@echo ""
	@echo "$(YELLOW)Admin:$(NC)"
	@curl -s http://localhost:3001 > /dev/null && echo "$(GREEN)‚úÖ Admin –¥–æ—Å—Ç—É–ø–µ–Ω$(NC)" || echo "$(RED)‚ùå Admin –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω$(NC)"
